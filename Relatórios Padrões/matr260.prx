#INCLUDE "MATR260.CH"
#INCLUDE "PROTHEUS.CH"

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR260  ³ Autor ³ Marcos V. Ferreira    ³ Data ³ 16/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Posicao dos Estoques                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function MATR267()
Local oReport
Local nTamLOC	:= TamSX3("B2_LOCAL")[1]
Local lContinua	:= .F.
Local aSX1		:= {}

Private cALL_LOC	:= Replicate('*', nTamLOC)
Private cALL_Empty	:= Replicate(' ', nTamLOC)
Private cALL_ZZ		:= Replicate('Z', nTamLOC)
Private lFirst		:= .T.
Private oTempTable	:= NIL                                                                          
Private aMV_PAR		:= array(25) // total de perguntas do grupo MTR260R1
Private cPerg		:= ""

aSX1 := DefineSX1()
cPerg := aSX1[1] // grupo de pergunta
lContinua := aSX1[2] // O grupo de pergunta esta correto

If lContinua
	If TRepInUse()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Interface de impressao                                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oReport:= ReportDef()
		oReport:PrintDialog()
	Else
		MATR260R3()
	EndIf
Else
	Help('',1,'MTR260SX1',,'Não foi encontrado o grupo de perguntas MTR260R1.',1,0) 
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Marcos V. Ferreira     ³ Data ³16/06/06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR260			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()
Local aOrdem    := {OemToAnsi(STR0005),OemToAnsi(STR0006),OemToAnsi(STR0007),OemToAnsi(STR0008),OemToAnsi(STR0009)}    //" Por Codigo         "###" Por Tipo           "###" Por Descricao     "###" Por Grupo        "###" Por Almoxarifado   "
Local cAliasTRB := GetNextAlias()
Local aSizeQT	:= TamSX3("B2_QATU")
Local aSizeVL	:= TamSX3("B2_VATU1")
Local nTamProd	:= TamSX3("B1_COD")[1] + 5
Local aSizeLZ   := TamSX3("NNR_DESCRI")
Local cPictQT   := PesqPict("SB2","B2_QATU")
Local cPictVL   := PesqPict("SB2","B2_VATU1")
Local cPictLZ   := PesqPict("NNR","NNR_DESCRI")
Local oReport
Local oSection
Local nCnt

cAliasTRB:=GetNextAlias()

oReport:= TReport():New("MATR260",STR0001,cPerg,,)

//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Variaveis utilizadas para parametros no grupo de pergunta MTR260R1
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// mv_par01 - Aglutina por: Almoxarifado / Filial / Empresa
// mv_par02 - Filial de
// mv_par03 - Filial ate
// mv_par04 - almoxarifado de
// mv_par05 - almoxarifado ate
// mv_par06 - Produto de
// mv_par07 - Produto ate
// mv_par08 - tipo de
// mv_par09 - tipo ate
// mv_par10 - grupo de
// mv_par11 - grupo ate
// mv_par12 - descricao de
// mv_par13 - descricao ate
// mv_par14 - Codigo do Item de
// mv_par15 - Codigo do Item ate
// mv_par16 - imprime produtos: Todos /Positivos /Negativos
// mv_par17 - Saldo a considerar : Atual / Fechamento / Movimento
// mv_par18 - Qual Moeda (1 a 5)
// mv_par19 - Aglutina por UM ?(S)im (N)ao
// mv_par20 - Lista itens zerados ? (S)im (N)ao
// mv_par21 - Imprimir o Valor ? Custo / Custo Std / Ult Prc Compr
// mv_par22 - Data de Referencia
// mv_par23 - Lista valores zerados ? (S)im (N)ao
// mv_par24 - QTDE na 2a. U.M. ? (S)im (N)ao
// mv_par25 - Imprime descricao do Armazem ? (S)im (N)ao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(oReport:uParam,.F.)
// Se for executado do MTR260 deve ajustar para o grupo de pergunta MTR260R1 
If oReport:uParam ="MTR260"

	For nCnt := 01 to 13 
		aMV_PAR[nCnt] := &("mv_par"+StrZero(nCnt,2))
	Next nCnt
	aMV_PAR[14] := mv_par06
	aMV_PAR[15] := mv_par06
	
	For nCnt := 25 to 16 step -1
		aMV_PAR[nCnt] := &("mv_par"+StrZero(nCnt-2,2))
	Next nCnt
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection := TRSection():New(oReport,STR0053,{"SB2","SB1","SB2"},aOrdem) //"Saldos em Estoque"
MontaTrab(oReport,oSection:GetOrder(),cAliasTRB,oSection,.T.)
oReport := TReport():New("MATR260",STR0001,cPerg, {|oReport| ReportPrint(oreport,aOrdem,cAliasTRB)},STR0002+" "+STR0003+" "+STR0004) //"Relacao da Posicao do Estoque"
oReport:SetUseGC(.F.) //-- Desabilita GE para não conflitar com perguntas do relatório
If TamSX3("B1_COD")[1] > 15
	oReport:SetLandscape()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Criacao da Sessao 1                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection := TRSection():New(oReport,STR0053,{"SB2","SB1",cAliasTRB},aOrdem) //"Saldos em Estoque"
oSection:SetTotalInLine(.F.)

TRCell():New(oSection,'B1_COD'		,'SB1',STR0036,/*Picture*/,nTamProd,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B1_TIPO'		,'SB1',STR0037,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B1_GRUPO'	,'SB1',STR0038,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B1_DESC'		,'SB1',STR0039,/*Picture*/,If(oReport:GetOrientation() == 1,50,),/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B1_UM'		,'SB1',STR0040,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT")
TRCell():New(oSection,'B1_SEGUM'	,'SB1',STR0040,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B2_FILIAL'	,'SB2',STR0041,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B2_LOCAL'	,'SB2',STR0042,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection,'B0_PRV1'	,'SB0',STR0042,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)

TRCell():New(oSection,'QUANT'		,cAliasTRB,STR0043+CRLF+STR0044,cPictQT						   ,aSizeQT[1],/*lPixel*/,/*{|| code-block de impressao }*/,,,"RIGHT")
TRCell():New(oSection,'QUANTR'		,cAliasTRB,STR0045+CRLF+STR0046,cPictQT						   ,aSizeQT[1],/*lPixel*/,/*{|| code-block de impressao }*/,,,"RIGHT")
TRCell():New(oSection,'DISPON'		,cAliasTRB,STR0047+CRLF+STR0048,cPictQT						   ,aSizeQT[1],/*lPixel*/,/*{|| code-block de impressao }*/,,,"RIGHT")
TRCell():New(oSection,'VALOR'		,cAliasTRB,STR0049+CRLF+STR0044,If(cPaisLoc=="CHI",'',cPictVL),aSizeVL[1],/*lPixel*/,/*{|| code-block de impressao }*/,,,"RIGHT")
TRCell():New(oSection,'VALORR'		,cAliasTRB,STR0049+CRLF+STR0050,If(cPaisLoc=="CHI",'',cPictVL),aSizeVL[1],/*lPixel*/,/*{|| code-block de impressao }*/,,,"RIGHT")
TRCell():New(oSection,'DESCARM'		,cAliasTRB,STR0051+CRLF+STR0052,cPictLZ						    ,aSizeLZ[1],/*lPixel*/,/*{|| code-block de impressao }*/)

oSection:SetHeaderPage()
oSection:SetNoFilter(cAliasTRB)

Return(oReport)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrint ³ Autor ³Marcos V. Ferreira   ³ Data ³16/06/06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportPrint devera ser criada para todos  ³±±
±±³          ³os relatorios que poderao ser agendados pelo usuario.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatorio                           ³±±
±±³          ³ExpA2: Array com as ordem do relatorio                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR260			                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport,aOrdem,cAliasTRB)

Local oSection   := oReport:Section(1)
Local nOrdem     := oSection:GetOrder()
Local cCodAnt    := ""
Local cFilAnter  := ""
Local lRet       := .T.
Local oBreak01
Local oBreak02

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Private                                            |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusUnif := A330CusFil()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao do titulo do relatorio                             |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:SetTitle(oReport:Title()+" - ("+AllTrim(aOrdem[oSection:GetOrder()])+" - "+AllTrim(SuperGetMv("MV_SIMB"+Ltrim(Str(aMV_PAR[18])),.F.))+")")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da linha de SubTotal                               |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If StrZero(nOrdem,1) $ "245"
	If nOrdem == 2
		//-- SubtTotal por Tipo
		oBreak01 := TRBreak():New(oSection,oSection:Cell("B1_TIPO"),STR0016+" "+STR0017,.F.)
	ElseIf nOrdem == 4
		//-- SubtTotal por Grupo
		oBreak01 := TRBreak():New(oSection,oSection:Cell("B1_GRUPO"),STR0016+" "+STR0018,.F.)
	ElseIf nOrdem == 5
		//-- SubtTotal por Armazem
		oBreak01 := TRBreak():New(oSection,oSection:Cell("B2_LOCAL"),STR0033,.F.)
	EndIf
	TRFunction():New(oSection:Cell('QUANT'	),NIL,"SUM",oBreak01,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('QUANTR'	),NIL,"SUM",oBreak01,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('DISPON'	),NIL,"SUM",oBreak01,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('VALOR'	),NIL,"SUM",oBreak01,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('VALORR'	),NIL,"SUM",oBreak01,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da linha de SubTotal da Unidade de Medida          |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aMV_PAR[19] == 1
	If aMV_PAR[24] == 1 //-- SubTotal pela 2a.U.M.
		oBreak02 := TRBreak():New(oSection,oSection:Cell("B1_SEGUM"),STR0019,.F.)
	Else //-- SubTotal pela 1a. U.M.
		oBreak02 := TRBreak():New(oSection,oSection:Cell("B1_UM"),STR0019,.F.)
	EndIf
	TRFunction():New(oSection:Cell('QUANT'	),NIL,"SUM",oBreak02,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('QUANTR'	),NIL,"SUM",oBreak02,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('DISPON'	),NIL,"SUM",oBreak02,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('VALOR'	),NIL,"SUM",oBreak02,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
	TRFunction():New(oSection:Cell('VALORR'	),NIL,"SUM",oBreak02,/*Titulo*/,/*cPicture*/,/*uFormula*/,.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da linha de Total Geral                            |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
TRFunction():New(oSection:Cell('QUANT'	),NIL,"SUM",/*oBreak*/,/*Titulo*/,/*cPicture*/,/*uFormula*/,.T.,.F.)
TRFunction():New(oSection:Cell('QUANTR'	),NIL,"SUM",/*oBreak*/,/*Titulo*/,/*cPicture*/,/*uFormula*/,.T.,.F.)
TRFunction():New(oSection:Cell('DISPON'	),NIL,"SUM",/*oBreak*/,/*Titulo*/,/*cPicture*/,/*uFormula*/,.T.,.F.)
TRFunction():New(oSection:Cell('VALOR'	),NIL,"SUM",/*oBreak*/,/*Titulo*/,/*cPicture*/,/*uFormula*/,.T.,.F.)
TRFunction():New(oSection:Cell('VALORR'	),NIL,"SUM",/*oBreak*/,/*Titulo*/,/*cPicture*/,/*uFormula*/,.T.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Visualizar a coluna B1_UM ou B1_SEGUM conforme parametrizacao |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aMV_PAR[24] == 1
	oSection:Cell('B1_UM'):Disable()
Else
	oSection:Cell('B1_SEGUM'):Disable()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Visualizar "Descricao do Armazem" conforme parametrizacao     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aMV_PAR[25] != 1
	oSection:Cell('DESCARM'):Disable()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta as perguntas para Custo Unificado                     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif .And. ((aMV_PAR[01]==1) .Or. !(aMV_PAR[04]==cALL_LOC) .Or. !(aMV_PAR[05]==cALL_LOC) .Or. nOrdem==5)
	If Aviso(STR0024,STR0025+CHR(10)+CHR(13)+STR0029+CHR(10)+CHR(13)+STR0026+CHR(10)+CHR(13)+STR0027+CHR(10)+CHR(13)+STR0028+CHR(10)+CHR(13)+STR0030,{STR0031,STR0032}) == 2
		lRet := .F.
	EndIf
EndIf

If lRet

	If aMV_PAR[04] == cALL_LOC
		aMV_PAR[04] := cALL_Empty
	EndIf

	If aMV_PAR[05] == cALL_LOC
		aMV_PAR[05] := cALL_ZZ
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajusta parametro de configuracao da Moeda                    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aMV_PAR[18] := If( ((aMV_PAR[18] < 1) .Or. (aMV_PAR[18] > 5)),1,aMV_PAR[18] )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta arquivo de trabalho                                    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MontaTrab(oReport,nOrdem,cAliasTRB,oSection,.F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³	Processando Impressao                                        |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oSection:aUserFilter := {}

	dbSelectArea( cAliasTRB )
	dbGoTop()
	oReport:SetMeter(LastRec())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³	Posiciona nas tabelas SB1 e SB2                              |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	TRPosition():New(oSection,"SB1",1,{|| If(FWModeAccess("SB1") == "E" .And. FWModeAccess("SB2") == "E",(cAliasTRB)->FILIAL+(cAliasTRB)->CODIGO,xFilial("SB1")+(cAliasTRB)->CODIGO)})
	TRPosition():New(oSection,"SB2",1,{|| (cAliasTRB)->FILIAL+(cAliasTRB)->CODIGO+(cAliasTRB)->LOCAL})
    TRPosition():New(oSection,"SB0",1,{|| (cAliasTRB)->FILIAL+(cAliasTRB)->CODIGO+(cAliasTRB)->LOCAL})
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³	Aglutina por Armazem/Filial/Empresa                          |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aMV_PAR[01] == 2
		If !(nOrdem == 5)
			oSection:Cell("B2_LOCAL"):SetValue(cALL_LOC)
		EndIf
	ElseIf aMV_PAR[01] == 3
		oSection:Cell("B2_FILIAL"):SetValue(Replicate("*",FWSizeFilial()))
		If !(nOrdem == 5)
			oSection:Cell("B2_LOCAL"):SetValue(cALL_LOC)
		EndIf
	EndIf

	oSection:Init()
	cCodAnt  := ""
	cFilAnter  := ""
	While !oReport:Cancel() .And. !Eof()

		oReport:IncMeter()

		If ( (aMV_PAR[16] == 1) .Or. ((aMV_PAR[16] == 2) .And. (QtdComp(FIELD->QUANT) >= QtdComp(0)) ) .Or. ;
		   ( (aMV_PAR[16] == 3) .And. (QtdComp(FIELD->QUANT) < QtdComp(0)) ) )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³	Validacao para Custo Unificado com Qtde. Zerada              |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusUnif
				If (aMV_PAR[20]==2) .And. (QtdComp(FIELD->QUANT)==QtdComp(0))
					dbSkip()
					Loop
				EndIf
			EndIf

		    If (cAliasTRB)->CODIGO == cCodAnt .And. (cAliasTRB)->FILIAL == cFilAnter
				oSection:Cell('B1_COD'		):Hide()
				oSection:Cell('B1_TIPO'		):Hide()
				oSection:Cell('B1_GRUPO'	):Hide()
				oSection:Cell('B1_DESC'		):Hide()
				If aMV_PAR[24] == 1
					oSection:Cell('B1_SEGUM'):Hide()
				Else
					oSection:Cell('B1_UM'	):Hide()
				EndIf
		    Else
				oSection:Cell('B1_COD'		):Show()
				oSection:Cell('B1_TIPO'		):Show()
				oSection:Cell('B1_GRUPO'	):Show()
				oSection:Cell('B1_DESC'		):Show()
				If aMV_PAR[24] == 1
					oSection:Cell('B1_SEGUM'):Show()
				Else
					oSection:Cell('B1_UM'	):Show()
				EndIf
		    EndIf

			oSection:PrintLine()

			cCodAnt := (cAliasTRB)->CODIGO
			cFilAnter := (cAliasTRB)->FILIAL
		EndIf
		dbSkip()
	EndDo

	oSection:Finish()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³	Apagando arquivo de trabalho temporario                      |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oTempTable:Delete()

EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MontaTrab | Autor ³ Marcos V. Ferreira    ³ Data ³ 16/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preparacao do Arquivo de Trabalho p/ Relatorio             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR260                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MontaTrab(oReport,nOrdem,cAliasTRB,oSection,lVisualiz)
Local cWhere		:= ""
Local cWhereB1  	:= ""
Local cWhereNNR 	:= ""
Local cWhereLocal 	:= ""
Local aSizeQT		:= TamSX3( "B2_QATU" )
Local aSizeVL		:= TamSX3( "B2_VATU1")
Local aSaldo		:= {}
Local nQuant		:= 0
Local nValor		:= 0
Local nQuantR		:= 0
Local nValorR		:= 0
Local cFilOK		:= cFilAnt
Local cAliasSB1		:= "SB1"
Local lExcl			:= .F.
Local lAglutLoc 	:= .F.
Local lAglutFil 	:= .F.
Local lAchou    	:= .F.
Local cSeek     	:= ""
Local cAliasSB2 	:= "SB2"
Local cUM    		:= If(aMV_PAR[24] == 1,"SEGUM","UM")
Local aCampos 		:= {	{ "FILIAL"	,"C",FWSizeFilial(),00 },;
							{ "CODIGO"	,"C",TamSX3("B1_COD")[1],00 },;
							{ "LOCAL"	,"C",TamSX3("B2_LOCAL")[1],00 },;
							{ "TIPO"	,"C",02	,00 },;
							{ "GRUPO"	,"C",04	,00 },;
							{ "DESCRI"	,"C",If(oReport:GetOrientation() == 1,50,TamSX3("B1_DESC")[1]),00 },;
							{ cUM     	,"C",02	,00 },;
							{ "VALORR"	,"N",aSizeVL[ 1 ]+1	, aSizeVL[ 2 ] },;
							{ "QUANTR"	,"N",aSizeQT[ 1 ]+1	, aSizeQT[ 2 ] },;
							{ "VALOR"	,"N",aSizeVL[ 1 ]+1	, aSizeVL[ 2 ] },;
							{ "QUANT"	,"N",aSizeQT[ 1 ]+1	, aSizeQT[ 2 ] },;
							{ "DESCARM"	,"C",TamSX3("NNR_DESCRI")[1],00 },;
							{ "DISPON"	,"N",aSizeQT[ 1 ]+1	, aSizeQT[ 2 ] };
						}

Local cFilUser 	:= oSection:GetAdvplExp()
Local dDataRef
Local aStrucSB1 := SB1->(dbStruct())
Local aStrucSB2 := SB2->(dbStruct())
Local lVeic 	:= Upper(SuperGetMV('MV_VEICULO',.F.,'N'))=="S"
Local aSB1Ite 	:= TAMSX3("B1_CODITE")

Local nX

Local XSB1 := SB1->(XFILIAL("SB1"))
Local XSB2 := SB2->(XFILIAL("SB2"))

Local aIndxKEY	:= {}
Local nDec		:= MsDecimais(aMV_PAR[18])

Default lVisualiz:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Aglutina por Armazem/Filial/Empresa                          |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aMV_PAR[01] == 2
	If !(nOrdem == 5)
		lAglutLoc := .T.
	EndIf
ElseIf aMV_PAR[01] == 3
	lAglutFil := .T.
	If !(nOrdem == 5)
		lAglutLoc := .T.
	EndIf
EndIf

dDataRef := IIf(Empty(aMV_PAR[22]),dDataBase,aMV_PAR[22])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para SIGAVEI, SIGAPEC e SIGAOFI                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lVeic
	If (aMV_PAR[01] == 1)
		If (nOrdem == 5)
			Aadd(aIndxKEY,"LOCAL")
		Else
			Aadd(aIndxKEY,"FILIAL")
		EndIf
		Do Case
			Case (nOrdem == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	Else //-- (aMV_PAR[01] == 1)
		If (nOrdem == 5)
			Aadd(aIndxKEY,"LOCAL")
		Else
			aIndxKEY := {}
		EndIf

		Do Case
			Case (nOrdem == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	EndIf
Else
	aAdd(aCampos,{"CODITE","C",aSB1Ite[ 1 ],00})
	If (aMV_PAR[01] == 1) // ARMAZEN
		If (nOrdem == 5) // ALMOXARIFADO
			Aadd(aIndxKEY,"LOCAL")
		Else
			Aadd(aIndxKEY,"FILIAL")
		EndIf
		Do Case
			Case (nOrdem == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
 				Aadd(aIndxKEY,"DESCRI")
 				Aadd(aIndxKEY,"CODITE")
 				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	Else // FILIAL / EMPRESA
		If (nOrdem == 5) // ALMOXARIFADO
			Aadd(aIndxKEY,"LOCAL")
		Else
			aIndxKEY := {}
		EndIf
		Do Case
			Case (nOrdem == 1) // CODIGO
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (nOrdem == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	EndIf
EndIf

//Caso a tabela temporaria já tiver sido criada pela ReportDef, exclui e recria com o índice correto

If !lFirst	
	oTempTable:delete()
	lFirst := .T.
EndIf

If lFirst	
	oTempTable := FWTemporaryTable():New( cAliasTRB )
	oTempTable:SetFields( aCampos )
	oTempTable:AddIndex("01", aIndxKEY )
	oTempTable:Create()
	lFirst := .F.
Endif

If lVisualiz
	Return
EndIf

dbSelectArea("SB2")
oReport:SetMeter(LastRec())

cSelect := "%"
If !Empty(cFilUser)
	For nX := 1 To SB2->(FCount())
		cName := SB2->(FieldName(nX))
	 	If AllTrim( cName ) $ cFilUser
      		If aStrucSB2[nX,2] <> "M"
      			If !cName $ cSelect
	        		cSelect += ","+cName+" "
	          	Endif
	       	EndIf
		EndIf
	Next nX
	For nX := 1 To SB1->(FCount())
		cName := SB1->(FieldName(nX))
	 	If AllTrim( cName ) $ cFilUser
      		If aStrucSB1[nX,2] <> "M"
      			If !cName $ cSelect
	        		cSelect += ","+cName+" "
	          	Endif
	       	EndIf
		EndIf
	Next nX
Endif
cSelect += "%"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Filtro adicional no clausula Where                                     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cWhere := "%"
If lVeic
	cWhere += "SB1.B1_CODITE BETWEEN '" + aMV_PAR[14] + "' AND '" + aMV_PAR[15] + "' "
Else
	cWhere += "SB1.B1_COD    BETWEEN '" + aMV_PAR[06] + "' AND '" + aMV_PAR[07] + "' "
EndIf
cWhere += "%"

cWhereB2 := "%"
If FWModeAccess("SB2") == "E"
	cWhereB2 += " B2_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
Else
    cWhereB2 += "B2_FILIAL = '" + xSB2 + "'"
EndIf
cWhereB2 += "%"

cWhereB1 := "%"
If FWModeAccess("SB1") == "E"
	If FWModeAccess("SB2") == "E"
		cWhereB1 += "B1_FILIAL = B2_FILIAL"
    Else
		cWhereB1 += " B1_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
    EndIf
Else
     cWhereB1 += "B1_FILIAL = '" + xFilial("SB1") + "'"
EndIf
cWhereB1 += "%"

cWhereNNR := "%"
If FWModeAccess("NNR") == "E"
	If FWModeAccess("SB2") == "E"
		cWhereNNR += "NNR_FILIAL = B2_FILIAL"
    Else
		cWhereNNR += " NNR_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
    EndIf
Else
   	cWhereNNR += "NNR_FILIAL = '" + xFilial("NNR") + "'"
EndIf
cWhereNNR += "%"

cWhereLOCAL := "%"
cWhereLOCAL += " SB2.B2_LOCAL BETWEEN '"+ aMV_PAR[04] + "' AND '" + aMV_PAR[05] + "' "
cWhereLOCAL += "%"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Transforma parametros Range em expressao SQL                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MakeSqlExpr(oReport:uParam)

cAliasSB2 := GetNextAlias()
cAliasSB1 := cAliasSB2

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicio do Embedded SQL                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
BeginSql Alias cAliasSB2
		SELECT B2_FILIAL, B2_LOCAL, B2_COD, B2_QATU, B2_QTSEGUM, B2_QFIM, B2_QFIM2, B2_VATU1, B2_VATU2,
				B2_VATU3, B2_VATU4, B2_VATU5, B2_VFIMFF1, B2_VFIMFF2, B2_VFIMFF3, B2_VFIMFF4, B2_VFIMFF5,
				B2_QEMP, B2_QEMP2, B2_QEMPPRE, B2_RESERVA, B2_RESERV2, B2_QEMPSA, B2_QEMPPRJ, B2_VFIM1,
				B2_QEMPPR2, B2_VFIM2, B2_VFIM3, B2_VFIM4, B2_VFIM5, B1_COD, B1_FILIAL, B1_TIPO, B1_GRUPO,
				B1_DESC, B1_GRUPO, B1_CUSTD, B1_UPRC, B1_MCUSTD, B1_SEGUM, B1_UM, B1_CODITE, NNR_DESCRI,
				B2_SALPPRE, B2_QEPRE2, B0_PRV1
				%Exp:cSelect%

		FROM %table:SB2% SB2
			INNER JOIN %table:SB1% SB1
			INNER JOIN %table:SB0% SB0
			ON
				%Exp:cWhereB1% 
				AND SB1.B1_COD = SB2.B2_COD 
				AND SB1.B1_COD = SB2.B0_COD 
				AND SB1.%NotDel%
			INNER JOIN %table:NNR% NNR
			ON
				%Exp:cWhereNNR%  
				AND NNR.NNR_CODIGO = SB2.B2_LOCAL
				AND	NNR.%NotDel% 

		WHERE  %Exp:cWhereB2% 
				AND SB1.B1_GRUPO BETWEEN %Exp:aMV_PAR[10]% AND %Exp:aMV_PAR[11]%
				AND SB1.B1_TIPO  BETWEEN %Exp:aMV_PAR[08]% AND %Exp:aMV_PAR[09]%	 
				AND %Exp:cWhereLOCAL% 
				AND SB1.B1_DESC BETWEEN %Exp:aMV_PAR[12]% AND %Exp:aMV_PAR[13]%
				AND %Exp:cWhere%   
				AND SB2.%NotDel% 	
EndSql

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abertura do arquivo de trabalho                              |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( cAliasSB2 )

For nX := 1 To Len(aStrucSB2)
	If aStrucSB2[nX][2] <> "C"
		TcSetField(cAliasSB2,aStrucSB2[nX][1],aStrucSB2[nX][2],aStrucSB2[nX][3],aStrucSB2[nX][4])
	EndIf
Next nX

If xFilial("SB2") != Space(FwSizeFilial())
	lExcl := .T.
EndIf

dbSelectArea( cAliasSB2 )

While !oReport:Cancel() .And. !Eof()

	If lExcl
		cFilAnt := (cAliasSB2)->B2_FILIAL
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Considera filtro escolhido                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If !Empty(cFilUser)
		SB1->(dbSetOrder(1))
	    SB1->(dbSeek( xFilial("SB1") + (cAliasSB2)->B2_COD) )
	    If !(&(cFilUser))
	       dbSkip()
    	   Loop
    	EndIf
	EndIf

	oReport:IncMeter()

	Do Case
		Case (aMV_PAR[17] == 1)
			nQuant := If( aMV_PAR[24]==1, ConvUM( (cAliasSB2)->B2_COD, (cAliasSB2)->B2_QATU, (cAliasSB2)->B2_QTSEGUM, 2 ), (cAliasSB2)->B2_QATU )
		Case (aMV_PAR[17] == 2)
			nQuant := If( aMV_PAR[24]==1, ConvUM( (cAliasSB2)->B2_COD, (cAliasSB2)->B2_QFIM, (cAliasSB2)->B2_QFIM2, 2 ), (cAliasSB2)->B2_QFIM )
		Case (aMV_PAR[17] == 3)
			nQuant := (aSaldo := CalcEst( (cAliasSB2)->B2_COD,(cAliasSB2)->B2_LOCAL,dDataRef+1,(cAliasSB2)->B2_FILIAL ))[ If( aMV_PAR[24]==1, 7, 1 ) ]
		Case (aMV_PAR[17] == 4)
			nQuant := If( aMV_PAR[24]==1, ConvUM( (cAliasSB2)->B2_COD, (cAliasSB2)->B2_QFIM, (cAliasSB2)->B2_QFIM2, 2 ), (cAliasSB2)->B2_QFIM )
		Case (aMV_PAR[17] == 5)
			nQuant := (aSaldo := CalcEstFF( (cAliasSB2)->B2_COD,(cAliasSB2)->B2_LOCAL,dDataRef+1,(cAliasSB2)->B2_FILIAL ))[ If( aMV_PAR[24]==1, 7, 1 ) ]
	EndCase


	dbSelectArea( cAliasSB1 )

	If (aMV_PAR[21] == 1)
		Do Case
			Case (aMV_PAR[17] == 1)
				nValor := (cAliasSB2)->(FieldGet( FieldPos( "B2_VATU"+Str( aMV_PAR[18],1 ) ) ))
			Case (aMV_PAR[17] == 2)
				nValor := (cAliasSB2)->(FieldGet( FieldPos( "B2_VFIM"+Str( aMV_PAR[18],1 ) ) ))
			Case (aMV_PAR[17] == 3)
				nValor := aSaldo[ 1+aMV_PAR[18] ]
			Case (aMV_PAR[17] == 4)
				nValor := (cAliasSB2)->(FieldGet( FieldPos( "B2_VFIMFF"+Str( aMV_PAR[18],1 ) ) ))
			Case (aMV_PAR[17] == 5)
				nValor := aSaldo[ 1+aMV_PAR[18] ]
		EndCase
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Converte valores para a moeda do relatorio (C.St. e U.Pr.Compra)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do Case
			Case (aMV_PAR[21] == 2)
				nValor := nQuant * xMoeda( RetFldProd((cAliasSB1)->B1_COD,"B1_CUSTD",cAliasSB1),Val( (cAliasSB1)->B1_MCUSTD ),aMV_PAR[18],dDataRef,4 )
			Case (aMV_PAR[21] == 3)  // Ult.Pr.Compra sempre na Moeda 1
				nValor := nQuant * xMoeda( RetFldProd((cAliasSB1)->B1_COD,"B1_UPRC" ,cAliasSB1),1,aMV_PAR[18],dDataRef,4 )
		EndCase
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se devera ser impresso itens zerados                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (aMV_PAR[20]==2)  .And. (QtdComp(nQuant)==QtdComp(0))
		dbSelectArea( cAliasSB2 )
		dbSkip()
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se devera ser impresso valores zerados              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (aMV_PAR[23]==2) .And. (QtdComp(nValor)==QtdComp(0))
		dbSelectArea( cAliasSB2 )
		dbSkip()
		Loop
	EndIf

	If (aMV_PAR[24]==1)
		nQuantR := (cAliasSB2)->B2_QEMP2 + AvalQtdPre("SB2",1,.T.,cAliasSB2) + (cAliasSB2)->B2_RESERV2  + ConvUM( (cAliasSB2)->B2_COD, (cAliasSB2)->B2_QEMPSA, 0, 2)+(cAliasSB2)->B2_QEMPPR2
	Else
		nQuantR := (cAliasSB2)->B2_QEMP + AvalQtdPre("SB2",1,NIL,cAliasSB2) + (cAliasSB2)->B2_RESERVA + (cAliasSB2)->B2_QEMPSA + (cAliasSB2)->B2_QEMPPRJ
	EndIf

	nValorR := (QtdComp(nValor) / QtdComp(nQuant)) * QtdComp(nQuantR)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Chave de pesquisa para aglutinar Armazem/Filial/Empresa ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lAglutLoc .Or. lAglutFil
		If (nOrdem == 5)
			cSeek := (cAliasSB2)->B2_LOCAL
		Else
			cSeek := ""
		EndIf
		Do Case
			Case (nOrdem == 1)
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutFil,"",(cAliasSB2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAliasSB2)->B2_LOCAL)
			Case (nOrdem == 2)
				cSeek += (cAliasSB1)->B1_TIPO
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutFil,"",(cAliasSB2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAliasSB2)->B2_LOCAL)
			Case (nOrdem == 3)
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += (cAliasSB1)->B1_DESC+IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutFil,"",(cAliasSB2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAliasSB2)->B2_LOCAL)
			Case (nOrdem == 4)
				cSeek += (cAliasSB1)->B1_GRUPO
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutFil,"",(cAliasSB2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAliasSB2)->B2_LOCAL)
			Case (nOrdem == 5)
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutFil,"",(cAliasSB2)->B2_FILIAL)
			OtherWise
				If (aMV_PAR[19] == 1)
					cSeek += IIf(aMV_PAR[24]==1,(cAliasSB1)->B1_SEGUM,(cAliasSB1)->B1_UM)
				EndIf
				cSeek += IIf(!lVeic,(cAliasSB2)->B2_COD,(cAliasSB2)->B1_CODITE)+IIf(lAglutLoc,"",(cAliasSB2)->B2_LOCAL)
		EndCase
	EndIf

	dbSelectArea( cAliasTRB )
	If lAglutLoc .Or. lAglutFil
	    lAchou := MsSeek(cSeek)
		RecLock(cAliasTRB,!lAchou)
	Else
		RecLock(cAliasTRB,.T.)
	EndIf

	FIELD->FILIAL := (cAliasSB2)->B2_FILIAL
	FIELD->CODIGO := (cAliasSB2)->B2_COD
	FIELD->LOCAL  := (cAliasSB2)->B2_LOCAL
	FIELD->TIPO   := (cAliasSB1)->B1_TIPO
	FIELD->GRUPO  := (cAliasSB1)->B1_GRUPO
	FIELD->DESCRI := (cAliasSB1)->B1_DESC
	If aMV_PAR[24] == 1
 	  FIELD->SEGUM  := (cAliasSB1)->B1_SEGUM
 	Else
 	  FIELD->UM     := (cAliasSB1)->B1_UM
 	EndIf
	FIELD->QUANTR += nQuantR
	FIELD->VALORR += iif(cPaisLoc=="CHI",Round(nValorR,nDec),nValorR)
	FIELD->QUANT  += nQuant
	FIELD->VALOR  += iif(cPaisLoc=="CHI",Round(nValor,nDec),nValor)
	FIELD->DISPON += (nQuant - nQuantR)
	If lVeic
		FIELD->CODITE := (cAliasSB1)->B1_CODITE
	EndIf
	If aMV_PAR[25] == 1
		FIELD->DESCARM := (cAliasSB2)->NNR_DESCRI
	EndIf
	MsUnlock()

	dbSelectArea( cAliasSB2 )
	dbSkip()

EndDo

cFilAnt := cFilOk

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga os arquivos de trabalho, cancela os filtros e restabelece as ordens originais.|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAliasSB2)
dbCloseArea()
ChkFile("SB2",.F.)

dbSelectArea("SB1")
dbClearFilter()

Return

// Define qual o Grupo de pergunta a ser 
//utilizado no relatorio
Static Function DefineSX1()
Local cRet		:= "MTR260"
Local lRet 		:= .T.
Local lVeiculo	:= Upper(SuperGetMV('MV_VEICULO',.F.,'N'))=="S"

If TableInDic("G3Q",.F.)
	dbSelectArea("SX1")
	dbSetOrder(1) //X1_GRUPO+X1_ORDEM
	If dbSeek("MTR260R1")
		cRet := "MTR260R1"
	EndIf
EndIf

lRet := (cRet == "MTR260R1")

// Se estou tratando o grupo de pergunta MTR260 devo verificar se 
// a pergunta 06 está correta
If !lRet 
	dbSelectArea("SX1")
	dbSetOrder(1) //X1_GRUPO+X1_ORDEM
	If dbSeek(padr(cRet,len(SX1->X1_GRUPO))+ "06")
		If lVeiculo
			If SX1->X1_F3==padr("VR4",len(SX1->X1_F3))
				lRet := .T.
			EndIf
		Else
			If SX1->X1_F3==padr("SB1",len(SX1->X1_F3))
				lRet := .T.
			EndIf
		EndIf
	EndIf
EndIf

Return {cRet,lRet}

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MATR260R3 ³ Autor ³ Eveli Morasco         ³ Data ³ 01/03/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Posicao dos Estoques                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marcelo Pim.³09/12/97³09827A³Ajuste da descricao p/ 30 caracteres.     ³±±
±±³Fernando J. ³25/09/98³17720A³ Corre‡„o no Salto de Linhas.             ³±±
±±³Fernando J. ³02/12/98³18752A³A fun‡„o PesqPictQT foi substituida pela  ³±±
±±³            ³        ³      ³PesqPict.                                 ³±±
±±³Fernando J. ³21/12/98³18920A³Possibilitar filtragem pelo usuario.      ³±±
±±³Rodrigo Sart³08/02/99³META  ³Avaliacao da qtd empenhada prevista.      ³±±
±±³Cesar       ³30/03/99³XXXXXX³Manutencao na SetPrint()                  ³±±
±±³Patricia Sal³28/01/00³002121³Aumento da picture dos campos.            ³±±
±±³Jeremias    ³09.02.00³Melhor³Validacao da comparacao dos valores e da  ³±±
±±³            ³        ³      ³qtde quando do calculo do custo medio.    ³±±
±±³RicardoBerti³12/09/05³086108³Se Moeda#1 p/Cust.St.e U.P.Cp:usa xMoeda()³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function MATR260R3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local Titulo   := STR0001	//"Relacao da Posicao do Estoque"
Local wnrel    := "MATR260"
Local cDesc1   := STR0002	//"Este relatorio emite a posicao dos saldos e empenhos de cada  produto"
Local cDesc2   := STR0003	//"em estoque. Ele tambem mostrara' o saldo disponivel ,ou seja ,o saldo"
Local cDesc3   := STR0004	//"subtraido dos empenhos."
Local cString  := "SB1"
Local aOrd     := {OemToAnsi(STR0005),OemToAnsi(STR0006),OemToAnsi(STR0007),OemToAnsi(STR0008),OemToAnsi(STR0009)}    //" Por Codigo         "###" Por Tipo           "###" Por Descricao     "###" Por Grupo        "###" Por Almoxarifado   "
Local lEnd     := .F.
Local Tamanho  := "M"
Local nCnt

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Private para SIGAVEI, SIGAPEC e SIGAOFI       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lVeic   := Upper(SuperGetMV('MV_VEICULO',.F.,'N'))=="S"
Private aSB1Cod := {}
Private aSB1Ite := {}
Private nCOL1	:= 0
Private XSB1	:= SB1->(XFILIAL("SB1"))
Private XSB2	:= SB2->(XFILIAL("SB2"))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Private padrao de todos os relatorios         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aReturn  := {OemToAnsi(STR0010), 1,OemToAnsi(STR0011), 2, 2, 1, "",1 }   //"Zebrado"###"Administracao"
Private nLastKey := 0 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusUnif := A330CusFil()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajustar o SX1 para SIGAVEI, SIGAPEC e SIGAOFI                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSB1Cod	:= TAMSX3("B1_COD")
aSB1Ite	:= TAMSX3("B1_CODITE")

If lVEIC
	Tamanho := "G"
	nCOL1	:= ABS(aSB1Cod[1] - aSB1Ite[1]) + 1 +  aSB1Cod[1]
EndIf

Pergunte(cPerg,.F.)
// Se for executado do MTR260 deve 
If cPerg ="MTR260"
	For nCnt := 01 to 13 
		aMV_PAR[nCnt] := &("mv_par"+StrZero(nCnt,2))
	Next nCnt
	aMV_PAR[14] := mv_par06
	aMV_PAR[15] := mv_par06
	
	For nCnt := 25 to 16 step -1
		aMV_PAR[nCnt] := &("mv_par"+StrZero(nCnt-2,2))
	Next nCnt
EndIf

If aMV_PAR[25] == 1
	Tamanho := "G"
Else
	Tamanho := "M"
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

wnrel:=SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,Tamanho)
If nLastKey = 27
	dbClearFilter()
	Return
Endif

If lCusUnif .And. ((aMV_PAR[01]==1).Or.!(aMV_PAR[04]==cALL_LOC).Or.!(aMV_PAR[05]==cALL_LOC).Or.aReturn[8]==5) //-- Ajusta as perguntas para Custo Unificado
	If Aviso(STR0024, STR0025+CHR(10)+CHR(13)+STR0029+CHR(10)+CHR(13)+STR0026+CHR(10)+CHR(13)+STR0027+CHR(10)+CHR(13)+STR0028+CHR(10)+CHR(13)+STR0030, {STR0031,STR0032}) == 2
		dbClearFilter()
		Return Nil
	EndIf
EndIf

If aMV_PAR[04] == cALL_LOC
	aMV_PAR[04] := cALL_Empty
EndIf
If aMV_PAR[05] == cALL_LOC
	aMV_PAR[05] := cALL_ZZ
Endif

SetDefault(aReturn,cString)
If nLastKey = 27
	dbClearFilter()
	Return
Endif

aMV_PAR[18] := If( ((aMV_PAR[18] < 1) .Or. (aMV_PAR[18] > 5)),1,aMV_PAR[18] )
Tipo     := IIf(aReturn[4]==1,15,18)

If Type("NewHead")#"U"
	Titulo := (NewHead+" ("+AllTrim( aOrd[ aReturn[ 8 ] ] )+" - "+AllTrim(SuperGetMv("MV_SIMB"+Ltrim(Str(aMV_PAR[18])),.F.))+")")
Else
	Titulo += " ("+AllTrim( aOrd[ aReturn[ 8 ] ] )+" - "+AllTrim(SuperGetMv("MV_SIMB"+Ltrim(Str(aMV_PAR[18])),.F.))+")"
EndIf

cFileTRB := ""
RptStatus( { | lEnd | cFileTRB := r260Select( @lEnd ) },Titulo+STR0023 ) //": Preparacao..."

If !Empty( cFileTRB )
	RptStatus({|lEnd| R260Imprime( @lEnd,cFileTRB,Titulo,wNRel,Tamanho,Tipo,aReturn[ 8 ] )},titulo)
EndIf

Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³R260SELECT³ Autor ³ Ben-Hur M. Castilho   ³ Data ³ 20/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preparacao do Arquivo de Trabalho p/ Relatorio             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR260                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function R260Select( lEnd )
Local cFileTRB	:= ""
Local aSizeQT	:= TamSX3( "B2_QATU" )
Local aSizeVL	:= TamSX3( "B2_VATU1")
Local aSaldo	:= {}
Local nQuant	:= 0
Local nValor	:= 0
Local nQuantR	:= 0
Local nTamProd	:= TamSX3("B1_COD")[1]
Local nValorR	:= 0
Local cFilOK	:= cFilAnt
Local cAl1		:= "SB1"
Local cAl2		:= "SB2"
Local lExcl		:= .F.
Local cUM    	:= If(aMV_PAR[24] == 1,"SEGUM","UM")
Local aCampos 	:= {	{ "FILIAL","C",FWSizeFilial(),00 },;
						{ "CODIGO","C",TamSX3("B1_COD")[1],00 },;
						{ "LOCAL ","C",TamSX3("B2_LOCAL")[1],00 },;
						{ "TIPO  ","C",02,00 },;
						{ "GRUPO ","C",04,00 },;
						{ "DESCRI","C",If (nTamProd > 15,TamSX3("B1_DESC")[1],21),00 },;
						{ cUM     ,"C",02,00 },;
						{ "VALORR","N",aSizeVL[ 1 ]+1, aSizeVL[ 2 ] },;
						{ "QUANTR","N",aSizeQT[ 1 ]+1, aSizeQT[ 2 ] },;
						{ "VALOR ","N",aSizeVL[ 1 ]+1, aSizeVL[ 2 ] },;
						{ "QUANT ","N",aSizeQT[ 1 ]+1, aSizeQT[ 2 ] },;
						{ "DESCARM","C",15,00 };
					 }
Local dDataRef
Local lAglutLoc := .F.
Local lAglutFil := .F.
Local cSeek     := ""

Local aStruSB1	:= {}
Local cName
Local cQryAd	:= ""
Local cQuery	:= ""
Local nX

Local aIndxKEY	:= {}
Local nDec		:= MsDecimais(aMV_PAR[18])


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³	Aglutina por Armazem/Filial/Empresa                          |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aMV_PAR[01] == 2
	If !(aReturn[8] == 5)
		lAglutLoc := .T.
	EndIf
ElseIf aMV_PAR[01] == 3
	lAglutFil := .T.
	If !(aReturn[8] == 5)
		lAglutLoc := .T.
	EndIf
EndIf

dDataRef := IIf(Empty(aMV_PAR[22]),dDataBase,aMV_PAR[22])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para SIGAVEI, SIGAPEC e SIGAOFI                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !lVeic
	If (aMV_PAR[01] == 1)
		If (aReturn[ 8 ] == 5)
			Aadd(aIndxKEY,"LOCAL")
		Else
			Aadd(aIndxKEY,"FILIAL")
		EndIf
		Do Case
			Case (aReturn[ 8 ] == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	Else // 	If (aMV_PAR[01] == 1)
		If (aReturn[ 8 ] == 5)
			Aadd(aIndxKEY,"LOCAL")
		Else
			aIndxKEY := {}
		EndIf

		Do Case
			Case (aReturn[ 8 ] == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODIGO")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	EndIf
Else
	aAdd(aCampos,{"CODITE","C",aSB1Ite[ 1 ],00})
	If (aMV_PAR[01] == 1) // ARMAZEN
		If (aReturn[ 8 ] == 5) // ALMOXARIFADO
			Aadd(aIndxKEY,"LOCAL")
		Else
			Aadd(aIndxKEY,"FILIAL")
		EndIf
		Do Case
			Case (aReturn[ 8 ] == 1)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
 				Aadd(aIndxKEY,"DESCRI")
 				Aadd(aIndxKEY,"CODITE")
 				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	Else // FILIAL / EMPRESA
		If (aReturn[ 8 ] == 5) // ALMOXARIFADO
			Aadd(aIndxKEY,"LOCAL")
		Else
			aIndxKEY := {}
		EndIf
		Do Case
			Case (aReturn[ 8 ] == 1) // CODIGO
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 2)
				Aadd(aIndxKEY,"TIPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 3)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"DESCRI")
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 4)
				Aadd(aIndxKEY,"GRUPO")
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"FILIAL")
				Aadd(aIndxKEY,"LOCAL")
			Case (aReturn[ 8 ] == 5)
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
			OtherWise
				If (aMV_PAR[19] == 1)
					Aadd(aIndxKEY,cUM)
				EndIf
				Aadd(aIndxKEY,"CODITE")
				Aadd(aIndxKEY,"LOCAL")
		EndCase
	EndIf
EndIf
cFileTRB := CriaTrab( nil,.F. )

oTempTable := FWTemporaryTable():New( cFileTRB )
oTempTable:SetFields( aCampos )
oTempTable:AddIndex("01", aIndxKEY )
oTempTable:Create()

dbSelectArea( "SB2" )
SetRegua(LastRec())

cQuery := "SELECT B2_FILIAL, B2_LOCAL, B2_COD, B2_QATU, B2_QTSEGUM, B2_QFIM, B2_QFIM2, B2_VATU1, B2_VATU2"
cQuery += ", B2_VATU3, B2_VATU4, B2_VATU5"
cQuery += ", B2_VFIMFF1, B2_VFIMFF2, B2_VFIMFF3, B2_VFIMFF4, B2_VFIMFF5, B2_QEMP, B2_QEMP2"
cQuery += ", B2_QEMPPRE, B2_RESERVA, B2_RESERV2, B2_QEMPSA, B2_QEMPPRJ, B2_VFIM1, B2_QEMPPR2"
cQuery += ", B2_VFIM2, B2_VFIM3, B2_VFIM4, B2_VFIM5, B1_COD, B1_FILIAL, B1_TIPO"
cQuery += ", B1_GRUPO, B1_DESC, B1_GRUPO, B1_CUSTD, B1_UPRC, B2_SALPPRE, B2_QEPRE2"
If aMV_PAR[21] == 2
	cQuery += ", B1_MCUSTD"
EndIf
If aMV_PAR[24] == 1
	cQuery += ", B1_SEGUM"
Else
	cQuery += ", B1_UM"
Endif
if lVEIC
	cQuery += ", B1_CODITE"
endif
If aMV_PAR[25] == 1
	cQuery += ", NNR_DESCRI"
Endif

aStruSB1 := SB1->(dbStruct())

If !Empty(aReturn[7])
	For nX := 1 To SB1->(FCount())
		cName := SB1->(FieldName(nX))
		If AllTrim( cName ) $ aReturn[7]
			If aStruSB1[nX,2] <> "M"
				If !cName $ cQuery .And. !cName $ cQryAd
					cQryAd += ", " + cName
				EndIf
			EndIf
		EndIf
	Next nX
EndIf

cQuery += cQryAd
cQuery += (" FROM " + RetSqlName("SB2") + " B2, " + RetSqlName("SB1") + " B1, "+ RetSqlName("NNR") + " NNR")
cQuery += (" WHERE B2_FILIAL BETWEEN '" + aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "'")
cQuery += ("   AND B2_LOCAL  BETWEEN '" + aMV_PAR[04] + "' AND '" + aMV_PAR[05] + "'")
if lVEIC
	cQuery += ("   AND B1_CODITE   BETWEEN '" + aMV_PAR[14] + "' AND '" + aMV_PAR[15] + "'")
ELSE
	cQuery += ("   AND B2_COD    BETWEEN '" + aMV_PAR[06] + "' AND '" + aMV_PAR[07] + "'")
ENDIF
cQuery +=  "   AND B2.D_E_L_E_T_ = ' '"
cQuery +=  "   AND B2_COD = B1_COD"
cQuery +=  "   AND B2_LOCAL = NNR_CODIGO"
cQuery +=  "   AND "

If FWModeAccess("SB2") == "E"
	cQuery += " B2_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
Else
    cQuery += "B2_FILIAL = '" + xSB2 + "'"
EndIf

cQuery += " AND "

If FWModeAccess("SB1") == "E"
	If FWModeAccess("SB2") == "E"
		cQuery += "B1_FILIAL = B2_FILIAL"
    Else
		cQuery += " B1_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
    EndIf
Else
     cQuery += "B1_FILIAL = '" + xFilial("SB1") + "'"
EndIf

cQuery += " AND "

If FWModeAccess("NNR") == "E"
	If FWModeAccess("SB2") == "E"
		cQuery += "NNR_FILIAL = B2_FILIAL"
    Else
		cQuery += " NNR_FILIAL BETWEEN '"+ aMV_PAR[02] + "' AND '" + aMV_PAR[03] + "' "
    EndIf
Else
   	cQuery += "NNR_FILIAL = '" + xFilial("NNR") + "'"
EndIf

cQuery +=  "   AND B1.D_E_L_E_T_ = ' '"
cQuery +=  "   AND NNR.D_E_L_E_T_ = ' '"
cQuery += ("   AND B1_TIPO  between '" + aMV_PAR[08] + "' AND '" + aMV_PAR[09] + "'")
cQuery += ("   AND B1_GRUPO between '" + aMV_PAR[10] + "' AND '" + aMV_PAR[11] + "'")
cQuery += ("   AND B1_DESC  between '" + aMV_PAR[12] + "' AND '" + aMV_PAR[13] + "'")

cAl1 := "xxSB2"
cAl2 := "xxSB2"
cQuery := ChangeQuery(cQuery)

dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), cAl2, .F., .T.)

aEval(SB2->(dbStruct()), {|x| If(x[2] <> "C" .And. FieldPos(x[1]) > 0, TcSetField(cAl2,x[1],x[2],x[3],x[4]),Nil)})
aEval(SB1->(dbStruct()), {|x| If(x[2] <> "C" .And. FieldPos(x[1]) > 0, TcSetField(cAl2,x[1],x[2],x[3],x[4]),Nil)})

If xSB2 != "  "
	lExcl := .T.
EndIf

dbSelectArea( cAl2 )

While !Eof()
	If lExcl
		cFilAnt := (cAl2)->B2_FILIAL
	EndIf

	IncRegua()

	If	( ( (cAl2)->B2_FILIAL >= aMV_PAR[02] ) .And. ( (cAl2)->B2_FILIAL <= aMV_PAR[03] ) )	.And. ;
		( ( (cAl2)->B2_Local  >= aMV_PAR[04] ) .And. ( (cAl2)->B2_Local  <= aMV_PAR[05] ) )	.And. ;
		(IIf( lVeic, .T. ,( (cAl2)->B2_COD >= aMV_PAR[06] ) .And. ( (cAl2)->B2_COD <= aMV_PAR[07] ) ) )


			If (	(	((cAl1)->B1_TIPO  >= aMV_PAR[08] ) .And. ((cAl1)->B1_TIPO  <= aMV_PAR[09] )) .And. ;
					(	((cAl1)->B1_GRUPO >= aMV_PAR[10] ) .And. ((cAl1)->B1_GRUPO <= aMV_PAR[11] )) .And. ;
					(	((cAl1)->B1_DESC  >= aMV_PAR[12] ) .And. ((cAl1)->B1_DESC  <= aMV_PAR[13] )) .And. ;
					(	(!Empty(aReturn[7]) .And. &(aReturn[7]) ) .Or. Empty(aReturn[7]));
				)


				Do Case
					Case (aMV_PAR[17] == 1)
						nQuant := If( aMV_PAR[24]==1, ConvUM( (cAl2)->B2_COD, (cAl2)->B2_QATU, (cAl2)->B2_QTSEGUM, 2 ), (cAl2)->B2_QATU )
					Case (aMV_PAR[17] == 2)
						nQuant := If( aMV_PAR[24]==1, ConvUM( (cAl2)->B2_COD, (cAl2)->B2_QFIM, (cAl2)->B2_QFIM2, 2 ), (cAl2)->B2_QFIM )
					Case (aMV_PAR[17] == 3)
						nQuant := (aSaldo := CalcEst( (cAl2)->B2_COD,(cAl2)->B2_LOCAL,dDataRef+1,IIf(lExcl,Nil,(cAl2)->B2_FILIAL)))[ If( aMV_PAR[24]==1, 7, 1 ) ]
					Case (aMV_PAR[17] == 4)
						nQuant := If( aMV_PAR[24]==1, ConvUM( (cAl2)->B2_COD, (cAl2)->B2_QFIM, (cAl2)->B2_QFIM2, 2 ), (cAl2)->B2_QFIM )
					Case (aMV_PAR[17] == 5)
						nQuant := (aSaldo := CalcEstFF( (cAl2)->B2_COD,(cAl2)->B2_LOCAL,dDataRef+1,(cAl2)->B2_FILIAL ))[ If( aMV_PAR[24]==1, 7, 1 ) ]
				EndCase

				dbSelectArea( cAl1 )

				If (aMV_PAR[21] == 1)
					Do Case
						Case (aMV_PAR[17] == 1)
							nValor := (cAl2)->(FieldGet( FieldPos( "B2_VATU"+Str( aMV_PAR[18],1 ) ) ))
						Case (aMV_PAR[17] == 2)
							nValor := (cAl2)->(FieldGet( FieldPos( "B2_VFIM"+Str( aMV_PAR[18],1 ) ) ))
						Case (aMV_PAR[17] == 3)
							nValor := aSaldo[ 1+aMV_PAR[18] ]
 							Case (aMV_PAR[17] == 4)
							nValor := (cAl2)->(FieldGet( FieldPos( "B2_VFIMFF"+Str( aMV_PAR[18],1 ) ) ))
						Case (aMV_PAR[17] == 5)
							nValor := aSaldo[ 1+aMV_PAR[18] ]
					EndCase
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Converte valores para a moeda do relatorio (C.St. e U.Pr.Compra)³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Do Case
						Case (aMV_PAR[21] == 2)
							nValor := nQuant * xMoeda( RetFldProd((cAL1)->B1_COD,"B1_CUSTD",cAL1),Val( (cAL1)->B1_MCUSTD ),aMV_PAR[18],dDataRef,4 )
						Case (aMV_PAR[21] == 3)  // Ult.Pr.Compra sempre na Moeda 1
							nValor := nQuant * xMoeda( RetFldProd((cAL1)->B1_COD,"B1_UPRC" ,cAL1),1,aMV_PAR[18],dDataRef,4 )
					EndCase
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se devera ser impresso itens zerados                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (aMV_PAR[20]==2)  .And. (QtdComp(nQuant)==QtdComp(0))
					dbSelectArea( cAl2 )
					dbSkip()
					Loop
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se devera ser impresso valores zerados              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (aMV_PAR[23]==2) .And. (QtdComp(nValor)==QtdComp(0))
					dbSelectArea( cAl2 )
					dbSkip()
					Loop
				EndIf

				If (aMV_PAR[24]==1)
                 	nQuantR := (cAl2)->B2_QEMP2 + AvalQtdPre("SB2",1,.T.,cAl2) + (cAl2)->B2_RESERV2  + ConvUM( (cAl2)->B2_COD, (cAl2)->B2_QEMPSA, 0, 2)+(cAl2)->B2_QEMPPR2
				Else
					nQuantR := (cAl2)->B2_QEMP + AvalQtdPre("SB2",1,NIL,cAl2) + (cAl2)->B2_RESERVA + (cAl2)->B2_QEMPSA + (cAl2)->B2_QEMPPRJ
				EndIf

				nValorR := (QtdComp(nValor) / QtdComp(nQuant)) * QtdComp(nQuantR)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Monta Chave de pesquisa para aglutinar Armazem/Filial/Empresa ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lAglutLoc .Or. lAglutFil
					If (aReturn[8] == 5)
						cSeek := (cAl2)->B2_LOCAL
					Else
						cSeek := ""
					EndIf
					Do Case
						Case (aReturn[8] == 1)
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl2)->B2_COD+IIf(lAglutFil,"",(cAl2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAl2)->B2_LOCAL)
						Case (aReturn[8] == 2)
							cSeek += (cAl1)->B1_TIPO
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl2)->B2_COD+IIf(lAglutFil,"",(cAl2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAl2)->B2_LOCAL)
						Case (aReturn[8] == 3)
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl1)->B1_DESC+(cAl2)->B2_COD+IIf(lAglutFil,"",(cAl2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAl2)->B2_LOCAL)
						Case (aReturn[8] == 4)
							cSeek += (cAl1)->B1_GRUPO
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl2)->B2_COD+IIf(lAglutFil,"",(cAl2)->B2_FILIAL)+IIf(lAglutLoc,"",(cAl2)->B2_LOCAL)
						Case (aReturn[8] == 5)
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl2)->B2_COD+IIf(lAglutFil,"",(cAl2)->B2_FILIAL)
						OtherWise
							If (aMV_PAR[19] == 1)
								cSeek += IIf(aMV_PAR[24]==1,(cAl1)->B1_SEGUM,(cAl1)->B1_UM)
							EndIf
							cSeek += (cAl2)->B2_COD+IIf(lAglutLoc,"",(cAl2)->B2_LOCAL)
					EndCase
				EndIf

				dbSelectArea( cFileTRB )
				If lAglutLoc .Or. lAglutFil
				    lAchou := MsSeek(cSeek)
					RecLock(cFileTRB,!lAchou)
				Else
					RecLock(cFileTRB,.T.)
				EndIf

				FIELD->FILIAL := (cAl2)->B2_FILIAL
				FIELD->CODIGO := (cAl2)->B2_COD
				FIELD->LOCAL  := (cAl2)->B2_LOCAL
				FIELD->TIPO   := (cAl1)->B1_TIPO
				FIELD->GRUPO  := (cAl1)->B1_GRUPO
				FIELD->DESCRI := (cAl1)->B1_DESC
				If aMV_PAR[24] == 1
			 	  FIELD->SEGUM  := (cAl1)->B1_SEGUM
			 	Else
			 	  FIELD->UM     := (cAl1)->B1_UM
			 	EndIf
				FIELD->QUANTR += nQuantR
				FIELD->VALORR += iif(cPaisLoc=="CHI",Round(nValorR,nDec),nValorR)
				FIELD->QUANT  += nQuant
				FIELD->VALOR  += iif(cPaisLoc=="CHI",Round(nValor,nDec),nValor)
				If lVEIC
					FIELD->CODITE := (cAl1)->B1_CODITE
				EndIf
				If aMV_PAR[25] == 1
					FIELD->DESCARM := (cAl1)->NNR_DESCRI
				EndIf
			EndIf
		dbSelectArea( cAl2 )
	EndIf

	dbSkip()
EndDo

cFilAnt := cFilOk

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga os arquivos de trabalho, cancela os filtros e restabelece as ordens originais.|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAl2)
dbCloseArea()
ChkFIle("SB2",.F.)

dbSelectArea("SB1")
dbClearFilter()

Return( cFileTRB )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³R260IMPRIM³ Autor ³ Ben-Hur M. Castilho   ³ Data ³ 20/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preparacao do Arquivo de Trabalho p/ Relatorio             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR260                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function R260Imprime( lEnd,cFileTRB,cTitulo,wNRel,cTam,nTipo,nOrdem )

#define DET_SIZE  14

#define DET_CODE   1
#define DET_TIPO   2
#define DET_GRUP   3
#define DET_DESC   4
#define DET_UM     5
#define DET_FL     6
#define DET_ALMX   7
#define DET_SALD   8
#define DET_EMPN   9
#define DET_DISP  10
#define DET_VEST  11
#define DET_VEMP  12
#define DET_KEYV  13
#define DET_DEAL  14

#define ACM_SIZE   6

#define ACM_CODE   1
#define ACM_SALD   2
#define ACM_EMPN   3
#define ACM_DISP   4
#define ACM_VEST   5
#define ACM_VEMP   6

Local	aPrnDET   := Nil
Local	aTotORD   := Nil
Local	aTotUM    := Nil
Local	aTotUM1   := Nil
Local	aTotAMZ   := Nil

Local	cLPrnCd   := ""
Local	cLPrnFL   := ""
Local   cProd     := ""
Local   cLocal	  := ""

Local	lPrintCAB := .F.
Local	lPrintDET := .F.
Local	lPrintTOT := .F.
Local	lPrintOUT := .F.
Local	lPrintLIN := .F.

Local 	nTamProd  := TamSx3("B1_COD")[1]
Local	nTotValEst:=0
Local	nTotValEmp:=0
Local	nTotValSal:=0
Local	nTotValRPR:=0
Local	nTotValRes:=0

Local cPicture	:= PesqPict("SB2", If( (aMV_PAR[17] == 1),"B2_QATU","B2_QFIM" ),14 )
Local cPicVal	:= If(cPaisLoc== "CHI" ,'',PesqPict("SB2","B2_VATU"+If(aMV_PAR[24] == 1,"2","1") ,15))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis tipo Local para SIGAVEI, SIGAPEC e SIGAOFI         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local	lT		:= .F.
Local	lT1		:= .F.
Local	lT2		:= .F.
Local	cArm0	:= alltrim(OemToAnsi(STR0009))
Local	cArm1	:= ""
Local	cArm2	:= ""
Local	n2		:= Len(cArm0)
Local	n1

For	n1	:=	n2	To	1	Step	-1
	cArm2	:=	Substr(cArm0,n1,1)
	If cArm2 <> " "
		cArm1	:= cArm2 + cArm1
	Else
		Exit
	EndIf
Next

n1	:= 0
If lVeic
	n1	:= 016
EndIf

Private	Li		:= 80
		M_Pag	:= 1

cCab01 := OemToAnsi(STR0014)        //"CODIGO          TP GRUP DESCRICAO             UM FL ALM   SALDO       EMPENHO PARA     ESTOQUE      ___________V A L O R___________"
cCab02 := OemToAnsi(STR0015)        //"                                                          EM ESTOQUE  REQ/PV/RESERVA   DISPONIVEL    EM ESTOQUE          EMPENHADO "
//  	                                   123456789012345 12 1234 123456789012345678901 12 12 12 999,999,999.99 999,999,999.99 9999,999,999.99 9999,999,999.99 9999,999,999.99
//      	                               0         1         2         3         4         5         6         7         8         9        10        11        12        13
//          	                           0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012

If lVeic
	cCab01 := Substr(cCab01,1,aSB1Cod[1]) + Space(nCOL1) + Substr(cCab01,aSB1Cod[1]+1)
	cCab02 := Substr(cCab02,1,aSB1Cod[1]) + Space(nCOL1) + Substr(cCab02,aSB1Cod[1]+1)
EndIf

If aMV_PAR[25] == 1
	cCab01 += STR0034
	cCab02 += STR0035
EndIf

dbSelectArea( cFileTRB )
dbGoTop()
While !Eof()

	If	(LastKey() == 286) .OR. If(lEND==Nil,.F.,lEND) .OR. lAbortPrint
		Exit
	EndIf

	If (aPrnDET == nil)

		If lVEIC
			aPrnDET := Array( DET_SIZE + 1)
			aPrnDET[ DET_CODE ] := FIELD->CODITE
			aPrnDET[ DET_SIZE + 1 ] := FIELD->CODIGO
		Else
			aPrnDET := Array( DET_SIZE )
			aPrnDET[ DET_CODE ] := FIELD->CODIGO
		EndIf
		aPrnDET[ DET_TIPO ] := FIELD->TIPO
		aPrnDET[ DET_GRUP ] := FIELD->GRUPO
		aPrnDET[ DET_DESC ] := FIELD->DESCRI
		aPrnDET[ DET_UM   ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)
		aPrnDET[ DET_FL   ] := ""
		aPrnDET[ DET_ALMX ] := ""
		aPrnDET[ DET_SALD ] := 0
		aPrnDET[ DET_EMPN ] := 0
		aPrnDET[ DET_DISP ] := 0
		aPrnDET[ DET_VEST ] := 0
		aPrnDET[ DET_VEMP ] := 0
		aPrnDET[ DET_DEAL ] := If(aMV_PAR[25]==1,FIELD->DESCARM,"")
		aPrnDET[ DET_KEYV ] := ""
	EndIf

	If (aMV_PAR[19] == 1) .And. (aTotUM == Nil)
		aTotUM	:= { If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM),0,0,0,0,0 }
	EndIf
	If (aMV_PAR[19] == 1) .And. (aTotUM1 == Nil)
		aTotUM1	:= { If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->LOCAL,0,0,0,0,0 }
	EndIf
	//SubTotal por Armazem
	If nOrdem == 5 .And. (aTotAMZ == Nil)
		aTotAMZ	:= { If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM),0,0,0,0,0 }
	EndIf

	If (((nOrdem == 2) .Or. (nOrdem == 4)) .And. (aTotORD == Nil))
		aTotORD := { If( (nOrdem == 2),FIELD->TIPO,FIELD->GRUPO ),0,0,0,0,0 }
	EndIf

	Do Case
		Case (aMV_PAR[01] == 1)
			aPrnDET[ DET_FL   ] := FIELD->FILIAL
			aPrnDET[ DET_ALMX ] := FIELD->LOCAL
		Case ((aMV_PAR[01] == 2) .And. (aPrnDET[ DET_KEYV ] == ""))
			aPrnDET[ DET_FL   ] := FIELD->FILIAL
			aPrnDET[ DET_ALMX ] := If( (aReturn[ 8 ] == 5),FIELD->LOCAL,"**")
		Case ((aMV_PAR[01] == 3) .And. (aPrnDET[ DET_KEYV ] == ""))
			aPrnDET[ DET_FL   ] := "**"
			aPrnDET[ DET_ALMX ] := If( (aReturn[ 8 ] == 5),FIELD->LOCAL,"**")
	EndCase

	If	aPrnDET[ DET_KEYV ] == ""
		If lVeic
			Do Case
				Case (aMV_PAR[01] == 1)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+FIELD->CODITE+FIELD->FILIAL
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL+FIELD->LOCAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODITE+FIELD->FILIAL+FIELD->LOCAL
						EndIf
					EndIf
				Case (aMV_PAR[01] == 2)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL
					   	Else
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+FIELD->CODITE+FIELD->FILIAL
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODITE+FIELD->FILIAL
						EndIf
					EndIf
				Case (aMV_PAR[01] == 3)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE
						Else
							aPrnDET[ DET_KEYV ] := FIELD->LOCAL+FIELD->CODITE
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODITE
						EndIf
					EndIf
			EndCase
		Else
			Do Case
				Case (aMV_PAR[01] == 1)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->Local+FIELD->CODIGO+FIELD->FILIAL
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL+FIELD->Local
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODIGO+FIELD->FILIAL+FIELD->Local
						EndIf
					EndIf
				Case (aMV_PAR[01] == 2)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->Local+FIELD->CODIGO+FIELD->FILIAL
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODIGO+FIELD->FILIAL
						EndIf
					EndIf
				Case (aMV_PAR[01] == 3)
					If (aReturn[ 8 ] == 5)
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO
						Else
							aPrnDET[ DET_KEYV ] := FIELD->Local+FIELD->CODIGO
						EndIf
					Else
						If (aMV_PAR[19] == 1)
							aPrnDET[ DET_KEYV ] := If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO
						Else
							aPrnDET[ DET_KEYV ] := FIELD->CODIGO
						EndIf
					EndIf
			EndCase
		EndIf
	EndIf

    cProd:= FIELD->CODIGO
    cLocal:= FIELD->LOCAL
	aPrnDET[ DET_SALD ] += FIELD->QUANT
	aPrnDET[ DET_EMPN ] += FIELD->QUANTR
	aPrnDET[ DET_DISP ] += (FIELD->QUANT-FIELD->QUANTR)
	aPrnDET[ DET_VEST ] += FIELD->VALOR
	aPrnDET[ DET_VEMP ] += FIELD->VALORR

	If ( (aMV_PAR[16] == 1)  .Or.;
		 ((aMV_PAR[16] == 2) .And.(QtdComp(aPrnDET[DET_SALD]) >= QtdComp(0))) .Or.;
		 ((aMV_PAR[16] == 3) .And.(QtdComp(aPrnDET[DET_SALD])  < QtdComp(0)))	)
		//Subtotal por Unidade de medida
		If (aMV_PAR[19] == 1)

			aTotUM[ ACM_SALD ] += FIELD->QUANT
			aTotUM[ ACM_EMPN ] += FIELD->QUANTR
			aTotUM[ ACM_DISP ] += (FIELD->QUANT-FIELD->QUANTR)
			aTotUM[ ACM_VEST ] += FIELD->VALOR
			aTotUM[ ACM_VEMP ] += FIELD->VALORR

			aTotUM1[ ACM_SALD ] += FIELD->QUANT
			aTotUM1[ ACM_EMPN ] += FIELD->QUANTR
			aTotUM1[ ACM_DISP ] += (FIELD->QUANT-FIELD->QUANTR)
			aTotUM1[ ACM_VEST ] += FIELD->VALOR
			aTotUM1[ ACM_VEMP ] += FIELD->VALORR
		EndIf
		//SubTotal por Armazem
		If nOrdem == 5
			aTotAMZ[ ACM_SALD ] += FIELD->QUANT
			aTotAMZ[ ACM_EMPN ] += FIELD->QUANTR
			aTotAMZ[ ACM_DISP ] += (FIELD->QUANT-FIELD->QUANTR)
			aTotAMZ[ ACM_VEST ] += FIELD->VALOR
			aTotAMZ[ ACM_VEMP ] += FIELD->VALORR
		EndIf

		If ((nOrdem == 2) .Or. (nOrdem == 4))
			aTotORD[ ACM_SALD ] += FIELD->QUANT
			aTotORD[ ACM_EMPN ] += FIELD->QUANTR
			aTotORD[ ACM_DISP ] += (FIELD->QUANT-FIELD->QUANTR)
			aTotORD[ ACM_VEST ] += FIELD->VALOR
			aTotORD[ ACM_VEMP ] += FIELD->VALORR
		EndIf
	EndIf
	dbSkip()

	If lVeic
		Do Case
			Case (aMV_PAR[01] == 1)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL)
				  	Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+FIELD->CODITE+FIELD->FILIAL)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL+FIELD->LOCAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODITE+FIELD->FILIAL+FIELD->LOCAL)
					EndIf
				EndIf
			Case (aMV_PAR[01] == 2)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+FIELD->CODITE+FIELD->FILIAL)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE+FIELD->FILIAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODITE+FIELD->FILIAL)
					EndIf
				EndIf
			Case (aMV_PAR[01] == 3)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->LOCAL+FIELD->CODITE)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODITE)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODITE)
					EndIf
				EndIf
		EndCase
	Else
		Do Case
			Case (aMV_PAR[01] == 1)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+FIELD->CODIGO+FIELD->FILIAL)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL+FIELD->Local)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODIGO+FIELD->FILIAL+FIELD->Local)
					EndIf
				EndIf
			Case (aMV_PAR[01] == 2)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+FIELD->CODIGO+FIELD->FILIAL)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO+FIELD->FILIAL)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODIGO+FIELD->FILIAL)
					EndIf
				EndIf
			Case (aMV_PAR[01] == 3)
				If (aReturn[ 8 ] == 5)
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->Local+FIELD->CODIGO)
					EndIf
				Else
					If (aMV_PAR[19] == 1)
						lPrintDET := !(aPrnDET[ DET_KEYV ] == If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->CODIGO)
					Else
						lPrintDET := !(aPrnDET[ DET_KEYV ] == FIELD->CODIGO)
					EndIf
				EndIf
		EndCase
	EndIf

	If ( (aMV_PAR[16] == 1)  .Or.;
		 ((aMV_PAR[16] == 2) .And.(QtdComp(aPrnDET[DET_SALD]) >= QtdComp(0))) .Or.;
		 ((aMV_PAR[16] == 3) .And.(QtdComp(aPrnDET[DET_SALD])  < QtdComp(0)))	)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³	Validacao para Custo Unificado com Qtde. Zerada              |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lCusUnif .And. lPrintDET
			If (aMV_PAR[20]==2) .And. (QtdComp(aPrnDET[DET_SALD])==QtdComp(0))
				aPrnDET := Nil
				Loop
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se devera ser impresso valores zerados              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (aMV_PAR[23]==2) .And. (QtdComp(aPrnDET[DET_VEST])==QtdComp(0))
			aPrnDET := Nil
			Loop
		EndIf

		If lPrintDET

			If (Li > 56)
				Cabec( cTitulo,cCab01,cCab02,wNRel,cTam,nTipo )
			EndIf

			Do Case
				Case !(aPrnDET[ DET_CODE ] == cLPrnCd .And. aPrnDET[ DET_FL ] == cLPrnFL)
					cLPrnCd   := aPrnDET[ DET_CODE ]
					cLPrnFL   := aPrnDET[ DET_FL ]
					lPrintCAB := .T.
			EndCase

			If lPrintCAB .Or. lPrintOUT
				If lVeic
					@ Li,000 PSay aPrnDET[ DET_CODE ] + " "+ aPrnDET[ DET_SIZE + 1 ]
				Else
					@ Li,000 PSay aPrnDET[ DET_CODE ]
				EndIf

				@ Li,016 + nCOL1 PSay aPrnDET[ DET_TIPO ]
				@ Li,019 + nCOL1 PSay aPrnDET[ DET_GRUP ]
				@ Li,024 + nCOL1 PSay aPrnDET[ DET_DESC ]
				If nTamProd<= 15
					@ Li,046 + nCOL1 PSay aPrnDET[ DET_UM   ]
				EndIf

				lPrintCAB := .F. ; lPrintOUT := .F.
			EndIf
            If nTamProd>15
				Li++
				@ Li,046 + nCOL1 PSay aPrnDET[ DET_UM   ]
			EndIf
			@ Li,049 + nCOL1 PSay aPrnDET[ DET_FL   ]
			@ Li,052 + nCOL1 PSay aPrnDET[ DET_ALMX ]

			@ Li,054 + nCOL1 PSay aPrnDET[ DET_SALD ] Picture cPicture
			@ Li,070 + nCOL1 PSay aPrnDET[ DET_EMPN ] Picture cPicture
			@ Li,085 + nCOL1 PSay aPrnDET[ DET_DISP ] Picture cPicture
			@ Li,100 + nCOL1 PSay aPrnDET[ DET_VEST ] Picture cPicVal
			@ Li,117 + nCOL1 PSay aPrnDET[ DET_VEMP ] Picture cPicVal
	        If aMV_PAR[25] == 1
		        @ Li,136 + nCOL1 PSay aPrnDET[ DET_DEAL ]
	        EndIf

			nTotValSal+=aPrnDET[ DET_SALD ]
			nTotValRPR+=aPrnDET[ DET_EMPN ]
			nTotValRes+=aPrnDET[ DET_DISP ]
			nTotValEst+=aPrnDET[ DET_VEST ]
			nTotValEmp+=aPrnDET[ DET_VEMP ]

			aPrnDET := Nil

			Li++
		EndIf
	Else
		aPrnDet := Nil
	EndIf

	Do Case
		Case (nOrdem <> 5) .And. ( (aMV_PAR[19] == 1) .And. (aTotUM[ ACM_CODE ] <> If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)))
			lPrintTOT := .T.
		Case (nOrdem == 5) .And. ( (aMV_PAR[19] == 1) .And. ((aTotUM1[ ACM_CODE ] <> If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)+FIELD->Local) .Or.;
			 (aTotUM[ ACM_CODE ] <> If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM)) ) ) .Or. nOrdem == 5
			lPrintTOT := .T.
		Case (( (nOrdem == 2) .Or. (nOrdem == 4) ) .And. !(aTotORD[ ACM_CODE ] == If( (nOrdem == 2),FIELD->TIPO,FIELD->GRUPO )))
			lPrintTOT := .T.
	EndCase

	If lPrintTOT

		lT		:= .F.	// IMPRIMIR E ZERAR aTotUM
		lT1		:= .F.	// IMPRIMIR E ZERAR aTotUM1

		If (aMV_PAR[19] == 1)
			If nORDEM <> 5 .AND. (aTotUM[ ACM_CODE ] <> If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM))
				lT	:= .T. // IMPRIMIR E ZERAR aTotUM
			Else
				If nORDEM == 5
					// unidade diferente !
					If (aTotUM[ ACM_CODE ] <> If(aMV_PAR[24]==1,FIELD->SEGUM,FIELD->UM))
						lT	:= .T. // IMPRIMIR E ZERAR aTotUM E aTotUM1.
						If lT2
							lT1	:= .T. // IMPRIMIR E ZERAR aTotUM1.
							lT2	:= .F. // SE TEM Q IMPRIMIR O aTotUM1.
						EndIf
					Else // unidade igual e local diferente !
						If (Substr(aTotUM1[ ACM_CODE ],LEN(aTotUM1[ ACM_CODE ])-1,2) <> FIELD->LOCAL)
							lT	:= .F. // NAO IMPRIMIR E ZERAR aTotUM.
							lT1	:= .T. // IMPRIMIR E ZERAR aTotUM1.
							If ! lT2
								lT2	:= .T.
							EndIf
						EndIf
					EndIf
				EndIf
	      	EndIf
		EndIf

		If lT .OR. lT1
			Li++
			If nORDEM <> 5
				@ Li,016 PSay OemToAnsi(STR0019)+aTotUM[ ACM_CODE ]   //"Total Unidade Medida : "
				@ Li,054 + nCOL1 PSay aTotUM[ ACM_SALD ] Picture cPicture
				@ Li,070 + nCOL1 PSay aTotUM[ ACM_EMPN ] Picture cPicture
				@ Li,085 + nCOL1 PSay aTotUM[ ACM_DISP ] Picture cPicture
				@ Li,100 + nCOL1 PSay aTotUM[ ACM_VEST ] Picture cPicVal
				@ Li,117 + nCOL1 PSay aTotUM[ ACM_VEMP ] Picture cPicVal

				aTotUM    := Nil
			Else
				If lT1
					@ Li,n1 PSay "Sub" + OemToAnsi(STR0019) ; //"SubTotal Unidade Medida : "
					+ SUBSTR(aTotUM1[ ACM_CODE ],1,LEN(aTotUM1[ ACM_CODE ])-2) ;
					+ " - " + cArm1 + " : " ;
					+ SUBSTR(aTotUM1[ ACM_CODE ],LEN(aTotUM1[ ACM_CODE ])-1,2)
					@ Li,054 + nCOL1 PSay aTotUM1[ ACM_SALD ] Picture cPicture
					@ Li,070 + nCOL1 PSay aTotUM1[ ACM_EMPN ] Picture cPicture
					@ Li,085 + nCOL1 PSay aTotUM1[ ACM_DISP ] Picture cPicture
					@ Li,100 + nCOL1 PSay aTotUM1[ ACM_VEST ] Picture cPicVal
					@ Li,117 + nCOL1 PSay aTotUM1[ ACM_VEMP ] Picture cPicVal

					aTotUM1	:= nil
					lT2		:= .T.
				EndIf
				If lT
					If lT1
						Li	+=	2
					EndIf

					@ Li,016 PSay OemToAnsi(STR0019)+aTotUM[ ACM_CODE ]   //"Total Unidade Medida : "
					@ Li,054 + nCOL1 PSay aTotUM[ ACM_SALD ] Picture cPicture
					@ Li,070 + nCOL1 PSay aTotUM[ ACM_EMPN ] Picture cPicture
					@ Li,085 + nCOL1 PSay aTotUM[ ACM_DISP ] Picture cPicture
					@ Li,100 + nCOL1 PSay aTotUM[ ACM_VEST ] Picture cPicVal
					@ Li,117 + nCOL1 PSay aTotUM[ ACM_VEMP ] Picture cPicVal

					aTotUM1	:= Nil
					aTotUM	:= Nil
					lT2		:= .F.
				EndIf
			EndIf
			Li++

			lPrintLIN := .T.
			lPrintTOT := .F. ; lPrintOUT := .T.
		EndIf

		//SubTotal por Armazem
		If nOrdem == 5 .And. cLocal != FIELD->LOCAL
			If nOrdem == 5
				@ Li,n1 PSay OemToAnsi(STR0033) ; //"SubTotal por Armazem: "
				+ SUBSTR(aTotAMZ[ ACM_CODE ],1,LEN(aTotAMZ[ ACM_CODE ])-2) + " - " + cArm1 + " : " ;
				+ cLocal
				@ Li,054 + nCOL1 PSay aTotAMZ[ ACM_SALD ] Picture cPicture
				@ Li,070 + nCOL1 PSay aTotAMZ[ ACM_EMPN ] Picture cPicture
				@ Li,085 + nCOL1 PSay aTotAMZ[ ACM_DISP ] Picture cPicture
				@ Li,100 + nCOL1 PSay aTotAMZ[ ACM_VEST ] Picture cPicVal
				@ Li,117 + nCOL1 PSay aTotAMZ[ ACM_VEMP ] Picture cPicVal
				Li++

				lPrintLIN := .T.
				lPrintTOT := .F.
				lPrintOUT := .T.
				lT2		  := .F.
				aTotAMZ   := Nil
			EndIf
		EndIf

		If (((nOrdem == 2) .Or. (nOrdem == 4)) .And. ;
				!(aTotORD[ ACM_CODE ] == If( (nOrdem == 2),FIELD->TIPO,FIELD->GRUPO )))

			Li++

			@ Li,016 PSay OemToAnsi(STR0016)+If( (nOrdem == 2),OemToAnsi(STR0017),OemToAnsi(STR0018))+" : "+aTotORD[ ACM_CODE ]   //"Total do "###"Tipo"###"Grupo"
	 	   	@ Li,054 + nCOL1 PSay aTotORD[ ACM_SALD ] Picture cPicture
		   	@ Li,070 + nCOL1 PSay aTotORD[ ACM_EMPN ] Picture cPicture
		   	@ Li,085 + nCOL1 PSay aTotORD[ ACM_DISP ] Picture cPicture
		   	@ Li,100 + nCOL1 PSay aTotORD[ ACM_VEST ] Picture cPicVal
		   	@ Li,117 + nCOL1 PSay aTotORD[ ACM_VEMP ] Picture cPicVal

			Li++

			aTotORD   := nil ; lPrintLIN := .T.
			lPrintTOT := .F. ; lPrintOUT := .T.
		EndIf

		If lPrintLIN
			Li++ ; lPrintLIN := .F.
		EndIf
	EndIf
EndDo

If nTotValSal + nTotValRPR + nTotValRes + nTotValEst + nTotValEmp # 0
	If Li > 56
		Cabec(cTitulo,cCab01,cCab02,wnRel,cTam,nTipo)
	EndIf
	Li += If(aMV_PAR[19]#1,1,0)
	@ Li,016 PSay OemToAnsi(STR0020) // "Total Geral : "
	@ Li,054 + nCOL1 PSay nTotValSal Picture cPicture
	@ Li,070 + nCOL1 PSay nTotValRPR Picture cPicture
	@ Li,085 + nCOL1 PSay nTotValRes Picture cPicture
	@ Li,100 + nCOL1 PSay nTotValEst Picture cPicVal
	@ Li,117 + nCOL1 PSay nTotValEmp Picture cPicVal
EndIf

If (LastKey() == 286) .Or. If(lEnd==Nil,.F.,lEnd) .Or. lAbortPrint
	@ pRow()+1,00 PSay OemToAnsi(STR0021)     //"CANCELADO PELO OPERADOR."
ElseIf !(RecCount()==0) //utilizado para nao Imprimir Pagina em Branco
	Roda( LastRec(), OemToAnsi(STR0022),cTam )    //"Registro(s) processado(s)"
EndIf

SET DEVICE TO SCREEN

MS_FLUSH()

If (aReturn[ 5 ] == 1)
	SET PRINTER TO
	OurSpool( wNRel )
Endif

oTempTable:Delete()

dbSelectArea( "SB1" )

Return( Nil )
